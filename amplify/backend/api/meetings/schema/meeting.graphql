type Meeting {
  ExternalMeetingId: String
  MediaPlacement: MediaPlacement
  MediaRegion: String
  MeetingId: String
}

type Attendee {
  AttendeeId: String
  ExternalUserId: String
  JoinToken: String
}

type MediaPlacement {
  AudioFallbackUrl: String
  AudioHostUrl: String
  ScreenDataUrl: String
  ScreenSharingUrl: String
  ScreenViewingUrl: String
  SignalingUrl: String
  TurnControlUrl: String
}

type AttendeeAndMeeting {
  meeting: Meeting
  attendee: Attendee
  statusCode: Int
  error: AWSJSON
  attendees: [Attendee] # all attendees who are in the meeting, at least the requester is there.
}

type Query {
  getOrCreateMeeting(meetingId: String, userId: String): AttendeeAndMeeting @function(name: "getOrCreateConversation-${env}")
  pushMeetingRecording(base64: String): AWSJSON @function(name: "pushMeetingRecording-${env}")
}
